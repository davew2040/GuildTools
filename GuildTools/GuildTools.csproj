<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.2</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
    <UserSecretsId>57626c94-03e6-4856-86fc-3777d11151c4</UserSecretsId>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="JWT" Version="4.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.All" Version="2.2.4" />
    <PackageReference Include="Microsoft.AspNetCore.App" />
    <PackageReference Include="Microsoft.Azure.KeyVault" Version="3.0.3" />
    <PackageReference Include="Microsoft.Azure.Services.AppAuthentication" Version="1.0.3" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="2.1.1" />
    <PackageReference Include="Sendgrid" Version="9.11.0" />
    <PackageReference Include="Serilog" Version="2.7.1" />
    <PackageReference Include="Serilog.AspNetCore" Version="2.1.1" />
    <PackageReference Include="Serilog.Sinks.Console" Version="3.1.1" />
    <PackageReference Include="Serilog.Sinks.MSSqlServer" Version="5.1.2" />
    <PackageReference Include="StackExchange.Redis" Version="2.0.513" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="Migrations\20190423151411_GuildProfilePermissions.cs" />
    <Compile Remove="Migrations\20190423151411_GuildProfilePermissions.Designer.cs" />
    <Compile Remove="Migrations\20190423171945_GameRegions.cs" />
    <Compile Remove="Migrations\20190423171945_GameRegions.Designer.cs" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\app\app.routes.ts" />
    <None Remove="ClientApp\src\app\auth\auth.service.ts" />
    <None Remove="ClientApp\src\app\blizzard-services\blizzard-services.ts" />
    <None Remove="ClientApp\src\app\data\blizzard-realms.ts" />
    <None Remove="ClientApp\src\app\services\account-service.ts" />
    <None Remove="ClientApp\src\app\services\data-services.ts" />
    <None Remove="ClientApp\src\app\services\Models\GuildExists.ts" />
    <None Remove="ClientApp\src\app\services\Models\GuildMember.ts" />
    <None Remove="ClientApp\src\app\services\Models\GuildProfile.ts" />
    <None Remove="ClientApp\src\app\login\login.model.ts" />
    <None Remove="ClientApp\src\app\register-user\register-user.model.ts" />
    <None Remove="ClientApp\src\app\reset-password-token\reset-password-token.model.ts" />
    <None Remove="ClientApp\src\app\reset-password\reset-password.model.ts" />
    <None Remove="ClientApp\src\app\shared-services\busy-service.ts" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\src\app\app.routes.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\auth\auth.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\blizzard-services\blizzard-services.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\data\blizzard-realms.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\account-service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\data-services.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\Models\GuildMember.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\Models\GuildExists.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\Models\GuildProfile.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\login\login.model.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\register-user\register-user.model.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\reset-password-token\reset-password-token.model.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\reset-password\reset-password.model.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\shared-services\busy-service.ts" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="ClientApp\src\app\components\" />
    <Folder Include="ClientApp\src\app\NewFolder\" />
    <Folder Include="Models\" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
</Project>
